// 2. Search Filter Script
// ==UserScript==
// @name         testHigh Court Search Filter
// @namespace    Sajin M. Simon
// @version      1.0
// @description  Adds search functionality to the High Court interface
// @author       Sajin M. Simon
// @match        *://10.145.22.11:8888/weed_catalogue.php*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    function addSearchFilter() {
        const searchContainer = document.createElement('div');
        Object.assign(searchContainer.style, {
            position: 'fixed',
            top: '10px',
            right: '10px',
            zIndex: '9999',
            display: 'flex',
            gap: '10px',
            alignItems: 'center',
            background: 'black',
            padding: '10px',
            borderRadius: '4px',
            boxShadow: '0 2px 5px rgba(0,0,0,0.2)'
        });

        const searchInput = document.createElement('input');
        Object.assign(searchInput.style, {
            padding: '5px 10px',
            borderRadius: '4px',
            border: '1px solid #ddd',
            width: '200px'
        });
        searchInput.placeholder = 'Search Case ID...';
        searchInput.id = 'caseIdSearch';

        const clearButton = document.createElement('button');
        Object.assign(clearButton.style, {
            padding: '5px 10px',
            borderRadius: '4px',
            border: '1px solid #ddd',
            background: 'white',
            cursor: 'pointer'
        });
        clearButton.textContent = 'Clear';
        clearButton.onclick = () => {
            searchInput.value = '';
            filterRows('');
        };

        searchContainer.appendChild(searchInput);
        searchContainer.appendChild(clearButton);
        document.body.appendChild(searchContainer);

        searchInput.addEventListener('input', (e) => filterRows(e.target.value));
    }

    function filterRows(searchText) {
        const rows = document.querySelectorAll('table tr');
        const searchValue = searchText.toLowerCase();

        rows.forEach((row, index) => {
            if (index === 0) return;
            const cells = row.getElementsByTagName('td');
            if (cells.length > 1) {
                const caseId = cells[1].textContent.toLowerCase();
                row.style.display = caseId.includes(searchValue) ? '' : 'none';
            }
        });
    }

    // Initialize
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', addSearchFilter);
    } else {
        addSearchFilter();
    }
})();
